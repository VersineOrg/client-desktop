@page
@model client_desktop.Pages.WritePost

@{
    Layout = "_LayoutApp";
    ViewData["Title"] = "WritePost";
    Newtonsoft.Json.Linq.JArray Circles = (Newtonsoft.Json.Linq.JArray) StorageManager.storage.Get("circles");
    string Token = (string) StorageManager.storage.Get("token");
}

<nav class="navbar navvvv" role="navigation" aria-label="main navigation">
  <div class="navbar-brand">
     <div class="navbar-item">
    <a class="navbar-item button"  href="/App">
     <i class="fas fa-arrow-left"></i>
    </a>
    </div>

    <a role="button" class="navbar-burger burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
      <span aria-hidden="true"></span>
    </a>
  </div>

  <div id="navbarBasicExample" class="navbar-menu">
    
    <div class="navbar-start scrooll" id="guilds">
    </div>

    <div class="navbar-end">
      <div class="navbar-item">
        <div class="buttons">
          <a id="addaguildbutton" href="/WritePost" class="button is-primary">
            <strong><i class="fas fa-plus-square"></i></strong>
          </a>

          <a id="circles" href="/Circles" class="button">
            <i class="fa-solid fa-circle-nodes"></i>
          </a>

          <a id="profilesearch" href="/Messages" class="button">
             <i class="fa-solid fa-message"></i>
          </a>
          
          <a id="timeline" href="/Inbox" class="button">
            <i class="fas fa-inbox"></i>
          </a>

          <a id="messages" href="/Search" class="button">
            <i class="fa-solid fa-magnifying-glass"></i>
          </a>
        </div>
      </div>
    </div>
  </div>
</nav>

<div class="container">
    <div class="card">
        <header class="card-header">
            <p class="card-header-title">
            Write a new post
            </p>
        </header>
        <div class="card-content">
                <div class="field">
                    <label class="label">Content</label>
                    <div class="control">
                        <textarea id="content" class="textarea" placeholder="Today I ate a banana"></textarea>
                    </div>
                </div>

                <div class="field">
                  <label class="label">Image url</label>
                  <p class="control has-icons-left">
                    <input id="imageurl" class="input" type="text" placeholder="Image url">
                    <span class="icon is-small is-left">
                      <i class="fas fa-image"></i>
                    </span>
                  </p>
                </div>

                @if (Circles.Count > 0)
                {
                  <div class="field">
                      <label class="label">Select circles</label>
                      <div class="control">
                        @foreach (dynamic circle in Circles)
                        {
                          <span id="circle" class="tag is-light is-medium" circleid="@circle.id">@circle.name</span> 
                        }
                        <small id="ticketHelpBlock" class="form-text text-muted mb-4">
                          Only the friends present in the selected circles will be able to see this post
                        </small>
                        <small id="ticketHelpBlock" class="form-text text-muted mb-4">
                          By selecting no circles your post will be visible to all your friends
                        </small>
                      </div>
                  </div>
                }
                else
                {
                  <div class="field">
                    <label class="label">You have no circles yet</label>
                    <small id="ticketHelpBlock" class="form-text text-muted mb-4">
                      <a href="/Circles">Create your first circle</a>
                    </small>
                  </div>
                }
                
                <div>
                    <p></p>
                    <button type="submit" class="button is-link" onclick="addPost()">Post</button>
                    <p></p>
                </div>

        </div>
    </div>
    
</div>

<script>
var selectedCircles = []

var buttonArray = document.querySelectorAll('#circle')
document.querySelectorAll('#circle').forEach(function(i) {
  i.addEventListener('click', function(e) {
      this.classList.toggle('is-light')
      this.classList.toggle('is-primary')
      if (selectedCircles.indexOf(this.getAttribute("circleid")) == -1)
      {
        selectedCircles.push(this.getAttribute("circleid"))
      }
      else {
        selectedCircles.splice(selectedCircles.indexOf(this.innerHTML), 1);
      }
      console.log(selectedCircles)
  })
});

function addPost()
{
    var content = document.getElementById("content").value
    var imageurl = document.getElementById("imageurl").value

    var message = ""

    if (content != null)
    {
      if (imageurl != null)
      {
        message += content
        message += "&imgurlsrc;"
        message += imageurl
      }
      else
      {
        message += content
      }
    }

    if (message != "" && content != null)
    {
      var data = {
          token: "@Token",
          message: message,
          media: "",
          circles: selectedCircles
      };

      var json = JSON.stringify(data);

      var xhr = new XMLHttpRequest();
      xhr.open("POST", "https://api.versine.fr/posts/addPost");
      xhr.withCredentials = false;
      xhr.setRequestHeader("Content-Type", "application/json");
      xhr.send(json);

      window.location = '/App'
    }
}

</script>